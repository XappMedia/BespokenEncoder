hyper-deploy-steps: &hyper-deploy-steps
  - attach_workspace:
      at: ~/circleci-deployment
  - run:
      name: Install hyper
      command: |
        wget https://hyper-install.s3.amazonaws.com/hyper-linux-x86_64.tar.gz
        tar xzf hyper-linux-x86_64.tar.gz
        chmod +x hyper
        ./hyper --help
  - run:
      name: Build Docker
      command: |
        docker login -u $DOCKER_USER -p $DOCKER_PASS
        docker build -f dockerbuild/Dockerfile -t bespoken/encoder:$CIRCLE_TAG .
        docker push bespoken/encoder:$CIRCLE_TAG
  - run:
      name: Login to Hyper
      command: |
        ./hyper config --accesskey $HYPER_KEY --secretkey $HYPER_SECRET --default-region us-west-1
        ./hyper login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
        ./hyper pull bespoken/encoder:$CIRCLE_TAG
  - run:
      name: Deploy container
      command: |
        ./hyper rm -f encoder || true
        >
          ./hyper run -d
          -e SSL_CERT="$SSL_CERT"
          -e SSL_KEY="$SSL_KEY"
          -e SERVER_PORT=443
          --name encoder --size s4 --restart=always -P bespoken/encoder:$CIRCLE_TAG
        ./hyper fip attach 199.245.56.172 encoder

version: 2
jobs:
  test:
    docker:
      - image: circleci/node:6
    working_directory: ~/circleci-deployment
    steps:
      - attach_workspace:
          at: ~/circleci-deployment
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install yasm nasm \
                             build-essential automake autoconf \
                             libtool pkg-config libcurl4-openssl-dev \
                             intltool libxml2-dev libgtk2.0-dev \
                             libnotify-dev libglib2.0-dev libevent-dev \
                             checkinstall
      - run: git clone git://git.videolan.org/ffmpeg.git
      - run: cd ffmpeg
      - run: ./configure --prefix=/usr
      - run: time make -j 8
      - run: cat RELEASE
      - run: sudo checkinstall
      - run: sudo dpkg --install ffmpeg_*.deb
      - run: npm install
      - run: npm run build
      - run: npm run test
      - persist_to_workspace:
          root: .
          paths: .

  encoder-prod:
    machine: true
    working_directory: ~/circleci-deployment
    steps: *hyper-deploy-steps


workflows:
  version: 2
  test-n-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - encoder-prod:
          requires:
            - test
          filters:
            tags:
              only: /encoder-prod-.*/
            branches:
              ignore: /.*/